#pragma warning disable CS1574 // XML comment has cref attribute that could not be resolved
#pragma warning disable CS1584 // XML comment has syntactically incorrect cref attribute
using System;
using System.CodeDom.Compiler;using MtconnectTranspiler.Sinks.CSharp.Contracts.Interfaces;

namespace {{ to_code_safe source.namespace }}
{
	/// <summary>{{ include 'UmlCommentsSummaryContent.scriban' source?.summary }}
	/// <br/> Visit <seealso href="https://model.mtconnect.org/#Enumeration__{{ source.reference_id }}">model.mtconnect.org</seealso> for more information.
	/// </summary>
	{{ include 'NormativeRemarks.scriban' source }}
	[GeneratedCode("MtconnectTranspiler.Sinks.CSharp", "{{ version }}")]
	public enum {{ source.name | to_code_safe | to_pascal_case }}
	{
		{{~ for item in source.items ~}}
		/// <summary>{{ include 'UmlCommentsSummaryContent.scriban' item?.summary }}
		/// </summary>
		{{ include 'NormativeRemarks.scriban' item }}
		{{ item.original_name | to_code_safe | to_upper_case }},
		{{~ end ~}}
	}

	/// <summary>{{ include 'UmlCommentsSummaryContent.scriban' source?.summary }}
	/// <br/>Visit <seealso href="https://model.mtconnect.org/#Enumeration__{{ source.reference_id }}">model.mtconnect.org</seealso> for more information.
	/// </summary>
	[GeneratedCode("MtconnectTranspiler.Sinks.CSharp", "{{ version }}")]
	public sealed class {{ source.name | to_code_safe | to_pascal_case }}MetaClass : IEnum
	{
		public const string HELP_URL = "https://model.mtconnect.org/#Enumeration__{{ source.reference_id }}";

		/// <inheritdoc />
		public string ReferenceId => "{{ source.reference_id }}";
		
		/// <inheritdoc />
		public string HelpUrl => HELP_URL;

		/// <inheritdoc />
		public string Name => "{{ source.name }}";
		
		/// <inheritdoc />
		public Type DataType => {{ if source.data_type != null && source.data_type != "" }}typeof({{ source.data_type }}){{ else }}null{{ end }};
		
		/// <inheritdoc />
		public Type Instance => typeof({{ source.name | to_code_safe | to_pascal_case }});

		/// <inheritdoc />
		public string NormativeVersion => "{{ source.normative_version }}";
		
		/// <inheritdoc />
		public string DeprecatedVersion => "{{ source.deprecated_version }}";
		
		/// <inheritdoc />
		public string Summary => @"{{ source.summary | string.replace "\"" "\"\"" | string.replace "\\" "\\\\" }}";
		
		/// <inheritdoc />
		public IEnumInstance[] Values => new IEnumInstance[] {
	{{~ for item in source.items ~}}
		{{ item.original_name | to_code_safe }},
	{{~ end ~}}
		};

	{{~ for item in source.items ~}}
	{{~ item_code_name = item.original_name | to_code_safe ~}}
		private {{ item_code_name }}Value _{{ item_code_name }};
		/// <inheritdoc cref="{{ item.original_name | to_code_safe }}Value" path="/summary" />
		public {{ item_code_name }}Value {{ item_code_name }} => _{{ item_code_name }} ?? (_{{ item_code_name }} = new {{ item_code_name }}Value());

		/// <summary>{{ include 'UmlCommentsSummaryContent.scriban' item?.summary }}
		/// Value for {{ source.name }}.<br/>
		/// <br/>See also <seealso cref="{{ source.name | to_code_safe | to_pascal_case }}">{{ source.name | to_code_safe | to_pascal_case }}</seealso>
		/// </summary>
		{{ include 'NormativeRemarks.scriban' item }}
		public sealed class {{ item.original_name | to_code_safe }}Value : IEnumInstance
		{
			/// <inheritdoc />
			public string Name => "{{ item.original_name }}";
			
			/// <inheritdoc />
			public object Value => null; // TODO: Add value, based on type.
			
			/// <inheritdoc />
			public string NormativeVersion => "{{ item.normative_version }}";
			
			/// <inheritdoc />
			public string DeprecatedVersion => "{{ item.deprecated_version }}";
			
			/// <inheritdoc />
			public string Summary => @"{{ item.summary | string.replace "\"" "\"\"" | string.replace "\\" "\\\\" }}";
		}
	{{~ end ~}}
	}
}