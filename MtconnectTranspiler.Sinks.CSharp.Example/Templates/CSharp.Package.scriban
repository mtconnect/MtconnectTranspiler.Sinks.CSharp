{{~ code_name = source.name | to_code_safe | string.remove "." ~}}
using System;
using System.CodeDom.Compiler;
using MtconnectTranspiler.Sinks.CSharp.Contracts.Interfaces;
{{~ if source.packages.size > 0 || source.classes.size > 0 ~}}
using Package = {{ to_code_safe source.namespace }}.{{ code_name }};
{{~ end ~}}
{{~ namespaces = get_package_namespaces source ~}}

namespace {{ to_code_safe source.namespace }}
{
{{~ if source?.summary != null && source?.summary != "" ~}}
	/// <summary>
	{{ source?.summary }}
	/// <br/>Visit <seealso href="https://model.mtconnect.org/#Package__{{ source.reference_id }}">model.mtconnect.org</seealso> for more information.
	/// </summary>
{{~ end ~}}
	[GeneratedCode("MtconnectTranspiler.Sinks.CSharp", "{{ version }}")]
	public class {{ code_name }}Package : IPackage
	{
		/// <inheritdoc />
		public string ReferenceId => "{{ source.reference_id }}";
		
		/// <inheritdoc />
		public string Name => "{{ source.normative_name }}";

		/// <inheritdoc />
		public string Summary => @"{{ source.summary | string.replace "\"" "\"\"" | string.replace "\\" "\\\\" }}";

		/// <inheritdoc />
		public IPackage[] Packages => new IPackage[] {
		{{~ for item in source.packages ~}}
{{~ item_code_name = item.name | to_code_safe | string.remove "." ~}}
			{{ item_code_name }}Package,
		{{~ end ~}}
		};
		
		/// <inheritdoc />
		public IClass[] Classes => new IClass[] {
		{{~ for item in source.classes ~}}
{{~ item_class_code_name = item.name | to_code_safe | string.remove "." ~}}
			{{ item_class_code_name }},
		{{~ end ~}}
		};
		#region Packages
	{{~ for item in source.packages ~}}
{{~ item_code_name = item.name | to_code_safe | string.remove "." ~}}
	private Package.{{ item_code_name }}Package _{{ item_code_name }}Package;
	/// <summary>
	/// <inheritdoc cref="Package.{{ item_code_name }}Package" path="/summary" />
	/// </summary>
	public Package.{{ item_code_name }}Package {{ item_code_name }}Package => _{{ item_code_name}}Package ?? (_{{ item_code_name }}Package = new Package.{{ item_code_name }}Package());

	{{~ end ~}}
	#endregion

	#region Classes
	{{~ for item in source.classes ~}}
{{~ item_class_code_name = item.name | to_code_safe | string.remove "." ~}}
	private Package.{{ item_class_code_name }} _{{ item_class_code_name }};
	/// <summary>
{{~ if item.ReferenceId ~}}
	/// <b>Id</b>: {{ item.ReferenceId }}<br/>
{{~ end ~}}
	/// <inheritdoc cref="Package.{{ item_class_code_name }}" path="/summary" />
	/// </summary>
	public Package.{{ item_class_code_name }} {{ item_class_code_name }} => _{{ item_class_code_name }} ?? (_{{ item_class_code_name }} = new Package.{{ item_class_code_name }}());

	{{~ end ~}}
	#endregion
	}
}