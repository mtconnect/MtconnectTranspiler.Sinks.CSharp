{{ code_name = source.name | to_code_safe | string.remove "." }}
using System;
using System.CodeDom.Compiler;
{{ namespaces = get_class_namespaces source }}
{{~ for item in namespaces ~}}
using {{ to_code_safe item }};
{{~ end ~}}

namespace {{ to_code_safe source.namespace }}
{
	[GeneratedCode("MtconnectTranspiler.Sinks.CSharp", "{{ version }}")]
	public sealed class {{ code_name }}Class
	{
		/// <inheritdoc cref="Class.ReferenceId" />
		public string ReferenceId => "{{ source.reference_id }}";
		
		/// <inheritdoc cref="Class.Name" />
		public string Name => "{{ source.name }}";
		
		/// <inheritdoc cref="Class.AccessModifier" />
		public string AccessModifier => "{{ source.access_modifier }}";
				
		/// <inheritdoc cref="Class.Modifier" />
		public string Modifier => "{{ source.modifier }}";
				
		/// <inheritdoc cref="Class.NormativeVersion" />
		public string NormativeVersion => "{{ source.normative_version }}";
				
		/// <inheritdoc cref="Class.DeprecatedVersion" />
		public string DeprecatedVersion => "{{ source.deprecated_version }}";

		public string Generalization => "{{ source.generalization }}";

		{{~ if source.properties.size > 0 ~}}
		public {{ code_name }}Properties Properties { get; } = new {{ code_name }}Properties();
		public sealed class {{ code_name }}Properties
		{
		{{~ for item in source.properties ~}}
		{{ item_code_name = item.name | to_code_safe | string.remove "." }}
		{{
			if item.association
				item_suffix = "PartProperty"
			else
				item_suffix = "Property"
			end
		}}
			/// <remarks>Original Name: {{ item.name }}</remarks>
			public {{ item_code_name }}{{ item_suffix }} {{ item_code_name }}{{ if item.association }}Part{{ end }} { get; } = new {{ item_code_name }}{{ item_suffix }}();
			public sealed class {{ item_code_name }}{{ item_suffix }}
			{
				/// <inheritdoc cref="Property.Type" />
				/// Original Type: {{ item.original_property_type }}
				public Type Type => typeof({{ item.type | to_pascal_case | to_code_safe }});
				
				/// <inheritdoc cref="Property.Name" />
				public string Name => "{{ item.name }}";
				
				/// <inheritdoc cref="Property.AccessModifier" />
				public string AccessModifier => "{{ item.access_modifier }}";
				
				/// <inheritdoc cref="Property.Modifier" />
				public string Modifier => "{{ item.modifier }}";
				
				/// <inheritdoc cref="Property.NormativeVersion" />
				public string NormativeVersion => "{{ item.normative_version }}";
				
				/// <inheritdoc cref="Property.DeprecatedVersion" />
				public string DeprecatedVersion => "{{ item.deprecated_version }}";
				
				public string Aggregation => "{{ item.aggregation }}";

				// Note: Extension.Extender
				public string Extension => "{{ item.extension }}";

				public string Association => "{{ item.association }}";

				// Note: DefaultValue.Name
				public string DefaultValue => "{{ item.default_value }}";

				// TODO: Add Summary
			}
		{{~ end ~}}
		};
		{{~ end ~}}

		{{~ if source.constraints.size > 0 ~}}
		# region Rules
	{{~ for constraint in source.constraints ~}}
		/// <summary>
		/// {{ constraint.name }}
		/// </summary>
		/// <remarks>Specification Language: <c>{{ constraint?.specification?.language ?? "Unspecified" }}</c></remarks>
		/*
		{{ constraint?.raw_script ?? "No Content" }}
		*/
	{{~ end ~}}
		# endregion
		{{~ end ~}}
	}
}